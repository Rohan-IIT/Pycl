import pandas as pd
import re

# Load dataset
df = pd.read_csv('DTS FileVerification.csv')

# Cleaning function
def clean_text(text):
    if pd.isna(text):
        return text
    try:
        text = text.encode('latin1').decode('utf-8')
    except:
        pass

    # Replace filenames
    text = re.sub(r'\S+\.csv\b', 'csv', text)
    text = re.sub(r'\S+\.CSV\b', 'csv', text)
    text = re.sub(r'\S+\.xml\b', 'xml', text)
    text = re.sub(r'\S+\.XML\b', 'xml', text)
    text = re.sub(r'\S+\.txt\b', 'txt', text)
    text = re.sub(r'\S+\.TXT\b', 'txt', text)

    # Remove 6, 7, 8 digit numbers
    text = re.sub(r'\b\d{8}\b', '', text)
    text = re.sub(r'\b\d{7}\b', '', text)
    text = re.sub(r'\b\d{6}\b', '', text)

    # Remove numeric values prefixed by #
    text = re.sub(r'#\d+', '', text)

    # Remove dates in formats like 4/7/25 or 4.18.25
    text = re.sub(r'\b\d{1,2}[\/\.]\d{1,2}[\/\.]?\d{0,4}\b', '', text)

    # Remove full written dates like 25th April 2026 or Friday 24th April 2025
    text = re.sub(r'\b(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday)?\s?\d{1,2}(?:st|nd|rd|th)?\s+[A-Za-z]+\s+\d{4}\b', '', text)

    # Remove time ranges like 12:30 pm to 9:30 pm IST
    text = re.sub(r'\b\d{1,2}:\d{2}\s*(am|pm)?\s*(to|-)\s*\d{1,2}:\d{2}\s*(am|pm)?\s*IST\b', '', text, flags=re.IGNORECASE)

    # Remove durations like "48 hours"
    text = re.sub(r'\b\d+\s+hours?\b', '', text)

    # Remove alphanumeric codes like 250424GKYC04327985 or 250328CSC02395960
    text = re.sub(r'\b\d{6,8}[A-Z]{3,}[0-9]{4,}\b', '', text)

    # Remove IP-like patterns
    text = re.sub(r'\b(?:\d{1,3}\.){3}\d{1,3}\b', '', text)

    # Remove domains like bankofamerica.com
    text = re.sub(r'\S*bankofamerica\.com\S*', '', text, flags=re.IGNORECASE)

    # Remove AS2-like tokens
    text = re.sub(r'AS2\S+', '', text)

    # Remove ALL CAPS words of length ≥6
    text = re.sub(r'\b[A-Z]{6,}\b', '', text)

    # Remove prefixes like bdep, tsep, R3, ESI, aes, hmac, woo
    text = re.sub(r'\b(?:bdep|tsep|R3|ESI|aes|hmac|woo)\S*\b', '', text, flags=re.IGNORECASE)

    # Remove mixed format like CLMCR01350091 or GKYC04327985
    text = re.sub(r'\b[A-Z]{4,}[0-9]{4,}\b', '', text)

    return text.strip()

# Apply cleaning
df['DTS Data'] = df['DTS Data'].apply(clean_text)

# Save cleaned dataset
df.to_csv('DTS_FileVerification_Cleaned.csv', index=False)


def clean_text(text):
    if pd.isna(text):
        return text
    try:
        text = text.encode('latin1').decode('utf-8')
    except:
        pass

    # NEW: Replace weird characters
    text = re.sub(r'[Ã¢â‚¬"”]+', ' ', text)

    # NEW: Remove 'Description:'
    text = re.sub(r'Description:\s*', '', text, flags=re.IGNORECASE)

    # NEW: Remove line breaks to make single-line text
    text = text.replace('\n', ' ').replace('\r', ' ')

    # (rest of your cleaning logic follows...)
